{"message":"found crate `cfg_if` compiled by an incompatible version of rustc","code":{"code":"E0514","explanation":"Dependency compiled with different version of `rustc`.\n\nExample of erroneous code:\n\n`a.rs`\n```ignore (cannot-link-with-other-tests)\n// compiled with stable `rustc`\n\n#[crate_type = \"lib\"]\n```\n\n`b.rs`\n```ignore (cannot-link-with-other-tests)\n// compiled with nightly `rustc`\n\n#[crate_type = \"lib\"]\n\nextern crate a; // error: found crate `a` compiled by an incompatible version\n                //        of rustc\n```\n\nThis error is caused when the version of `rustc` used to compile a crate, as\nstored in the binary's metadata, differs from the version of one of its\ndependencies. Many parts of Rust binaries are considered unstable. For\ninstance, the Rust ABI is not stable between compiler versions. This means that\nthe compiler cannot be sure about *how* to call a function between compiler\nversions, and therefore this error occurs.\n\nThis error can be fixed by:\n * Using [Cargo](../cargo/index.html), the Rust package manager and\n   [Rustup](https://rust-lang.github.io/rustup/), the Rust toolchain installer,\n   automatically fixing this issue.\n * Recompiling the crates with a uniform `rustc` version.\n"},"level":"error","spans":[{"file_name":"/Users/squeeko/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.14/src/lib.rs","byte_start":3197,"byte_end":3203,"line_start":95,"line_end":95,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"use cfg_if::cfg_if;","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following crate versions were found:\ncrate `cfg_if` compiled by rustc 1.67.0-nightly (96ddd32c4 2022-11-14): /Users/squeeko/RustDataScience-Study/linfa-study/target/debug/deps/libcfg_if-66b728c155c88ff2.rmeta","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"please recompile that crate using this compiler (rustc 1.69.0-nightly (11d96b593 2023-02-01)) (consider running `cargo clean` first)","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0514]\u001b[0m\u001b[0m\u001b[1m: found crate `cfg_if` compiled by an incompatible version of rustc\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/squeeko/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.14/src/lib.rs:95:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse cfg_if::cfg_if;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following crate versions were found:\u001b[0m\n\u001b[0m           crate `cfg_if` compiled by rustc 1.67.0-nightly (96ddd32c4 2022-11-14): /Users/squeeko/RustDataScience-Study/linfa-study/target/debug/deps/libcfg_if-66b728c155c88ff2.rmeta\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: please recompile that crate using this compiler (rustc 1.69.0-nightly (11d96b593 2023-02-01)) (consider running `cargo clean` first)\u001b[0m\n\n"}
{"message":"unresolved import `super::seq_lock`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"/Users/squeeko/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.14/src/atomic/atomic_cell.rs","byte_start":387,"byte_end":395,"line_start":16,"line_end":16,"column_start":12,"column_end":20,"is_primary":true,"text":[{"text":"use super::seq_lock::SeqLock;","highlight_start":12,"highlight_end":20}],"label":"could not find `seq_lock` in `super`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `super::seq_lock`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/squeeko/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.14/src/atomic/atomic_cell.rs:16:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse super::seq_lock::SeqLock;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `seq_lock` in `super`\u001b[0m\n\n"}
{"message":"found crate `cfg_if` compiled by an incompatible version of rustc","code":{"code":"E0514","explanation":"Dependency compiled with different version of `rustc`.\n\nExample of erroneous code:\n\n`a.rs`\n```ignore (cannot-link-with-other-tests)\n// compiled with stable `rustc`\n\n#[crate_type = \"lib\"]\n```\n\n`b.rs`\n```ignore (cannot-link-with-other-tests)\n// compiled with nightly `rustc`\n\n#[crate_type = \"lib\"]\n\nextern crate a; // error: found crate `a` compiled by an incompatible version\n                //        of rustc\n```\n\nThis error is caused when the version of `rustc` used to compile a crate, as\nstored in the binary's metadata, differs from the version of one of its\ndependencies. Many parts of Rust binaries are considered unstable. For\ninstance, the Rust ABI is not stable between compiler versions. This means that\nthe compiler cannot be sure about *how* to call a function between compiler\nversions, and therefore this error occurs.\n\nThis error can be fixed by:\n * Using [Cargo](../cargo/index.html), the Rust package manager and\n   [Rustup](https://rust-lang.github.io/rustup/), the Rust toolchain installer,\n   automatically fixing this issue.\n * Recompiling the crates with a uniform `rustc` version.\n"},"level":"error","spans":[{"file_name":"/Users/squeeko/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.14/src/atomic/mod.rs","byte_start":239,"byte_end":245,"line_start":8,"line_end":8,"column_start":1,"column_end":7,"is_primary":true,"text":[{"text":"cfg_if::cfg_if! {","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following crate versions were found:\ncrate `cfg_if` compiled by rustc 1.67.0-nightly (96ddd32c4 2022-11-14): /Users/squeeko/RustDataScience-Study/linfa-study/target/debug/deps/libcfg_if-66b728c155c88ff2.rmeta","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"please recompile that crate using this compiler (rustc 1.69.0-nightly (11d96b593 2023-02-01)) (consider running `cargo clean` first)","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0514]\u001b[0m\u001b[0m\u001b[1m: found crate `cfg_if` compiled by an incompatible version of rustc\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/squeeko/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.14/src/atomic/mod.rs:8:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mcfg_if::cfg_if! {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following crate versions were found:\u001b[0m\n\u001b[0m          crate `cfg_if` compiled by rustc 1.67.0-nightly (96ddd32c4 2022-11-14): /Users/squeeko/RustDataScience-Study/linfa-study/target/debug/deps/libcfg_if-66b728c155c88ff2.rmeta\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: please recompile that crate using this compiler (rustc 1.69.0-nightly (11d96b593 2023-02-01)) (consider running `cargo clean` first)\u001b[0m\n\n"}
{"message":"cannot determine resolution for the macro `cfg_if::cfg_if`","code":null,"level":"error","spans":[{"file_name":"/Users/squeeko/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.14/src/atomic/mod.rs","byte_start":239,"byte_end":253,"line_start":8,"line_end":8,"column_start":1,"column_end":15,"is_primary":true,"text":[{"text":"cfg_if::cfg_if! {","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"import resolution is stuck, try simplifying macro imports","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot determine resolution for the macro `cfg_if::cfg_if`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/squeeko/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.14/src/atomic/mod.rs:8:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mcfg_if::cfg_if! {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: import resolution is stuck, try simplifying macro imports\u001b[0m\n\n"}
{"message":"cannot determine resolution for the macro `cfg_if`","code":null,"level":"error","spans":[{"file_name":"/Users/squeeko/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.14/src/lib.rs","byte_start":3214,"byte_end":3220,"line_start":97,"line_end":97,"column_start":1,"column_end":7,"is_primary":true,"text":[{"text":"cfg_if! {","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"import resolution is stuck, try simplifying macro imports","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot determine resolution for the macro `cfg_if`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/squeeko/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.14/src/lib.rs:97:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mcfg_if! {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: import resolution is stuck, try simplifying macro imports\u001b[0m\n\n"}
{"message":"aborting due to 5 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 5 previous errors\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0432, E0514.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0432, E0514.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0432`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0432`.\u001b[0m\n"}
